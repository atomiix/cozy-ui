/*------------------------------------*\
  Mixins
  =====

  This file contains mixins:
  - hide()
  - reset()
\*------------------------------------*/
/*
    Tools

    Weight: -9

    Styleguide Tools
*/
/*
    Mixins

    Available mixins

    Styleguide Tools.mixins
*/
// @stylint off
use('../scripts/split.js')
use('../scripts/deprecate.js')
// @stylint on

// Default Font-size
$basefont ?= 16px

rem($value, $base = $basefont)
    $max = length($value)

    $remValues = ()
    for $i in (0...$max)
        push($remValues, _convert-to-rem($value[$i], $base))

    return $remValues

_convert-to-rem($px, $base)
    if (typeof($px) == 'unit')
        if ((unit($px) == '' || unit($px) == 'px') && ($px != 0))
            return (round($px / $base, 3))rem
        else
            return 0

/*
    rem($value, $basefont)

    rem() takes one or more numeric values in pixel and calculates the rem values from it.

    NB: you don't have to explicitly write the `px` unit.

    $value - The value in pixel you want to translate in rem. For multiple values you can use `rem(14 12)` for shorthand properties such as `margin`. âš  Multiples values should be separated by spaces.
    $basefont - If you need to overwrite the default `$basefont` value of `16`

    Weight: 1

    Styleguide Tools.mixins.rem
*/

/*
    hide()

    hide() mixin definitely hides an element. This mixin doesn't take parameters.

    Weight: 2

    Styleguide Tools.mixins.hide
*/
hide()
    display     none
    visibility  hidden

/*
    reset()

    reset() mixin removes every padding, margin and border of an element.
    This mixin doesn't take parameters.

    Weight: 3

    Styleguide Tools.mixins.reset
*/
reset()
    margin  0
    padding 0
    border  0

global(selector, placeholder)
    if cssmodules == true
        :global({selector})
            @extend {placeholder} // @stylint ignore
    else
        {selector}
            @extend {placeholder} // @stylint ignore

// @stylint on
